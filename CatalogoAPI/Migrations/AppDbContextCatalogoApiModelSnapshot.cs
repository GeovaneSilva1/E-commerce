// <auto-generated />
using System;
using LojaVirtual.CatalogoAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LojaVirtual.CatalogoAPI.Migrations
{
    [DbContext(typeof(AppDbContextCatalogoApi))]
    partial class AppDbContextCatalogoApiModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LojaVirtual.CatalogoAPI.Models.Categoria", b =>
                {
                    b.Property<long>("Handle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Handle"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Handle");

                    b.ToTable("categorias");
                });

            modelBuilder.Entity("LojaVirtual.CatalogoAPI.Models.ImagemProduto", b =>
                {
                    b.Property<long>("Handle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Handle"));

                    b.Property<long?>("ProdutoId")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Handle");

                    b.HasIndex("ProdutoId");

                    b.ToTable("imagensprodutos");
                });

            modelBuilder.Entity("LojaVirtual.CatalogoAPI.Models.Marca", b =>
                {
                    b.Property<long>("Handle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Handle"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Handle");

                    b.ToTable("marcas");
                });

            modelBuilder.Entity("LojaVirtual.CatalogoAPI.Models.Produto", b =>
                {
                    b.Property<long>("Handle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Handle"));

                    b.Property<long?>("CategoriaId")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("Estoque")
                        .HasColumnType("bigint");

                    b.Property<long?>("MarcaId")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PercentualDescontoAvista")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<decimal>("Preco")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("SKU")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Handle");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("MarcaId");

                    b.ToTable("produtos");
                });

            modelBuilder.Entity("LojaVirtual.CatalogoAPI.Models.ImagemProduto", b =>
                {
                    b.HasOne("LojaVirtual.CatalogoAPI.Models.Produto", "Produto")
                        .WithMany("ImagemProdutos")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("LojaVirtual.CatalogoAPI.Models.Produto", b =>
                {
                    b.HasOne("LojaVirtual.CatalogoAPI.Models.Categoria", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LojaVirtual.CatalogoAPI.Models.Marca", "Marca")
                        .WithMany("Produtos")
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("LojaVirtual.CatalogoAPI.Models.Categoria", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("LojaVirtual.CatalogoAPI.Models.Marca", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("LojaVirtual.CatalogoAPI.Models.Produto", b =>
                {
                    b.Navigation("ImagemProdutos");
                });
#pragma warning restore 612, 618
        }
    }
}
